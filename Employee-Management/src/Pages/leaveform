
import { useState } from "react";

function LeaveForm() {
  const [formData, setFormData] = useState({
    employeeName: "",
    leaveType: "",
    fromDate: "",
    toDate: "",
    reason: "",
  });
  const [success, setSuccess] = useState("");
  const [error, setError] = useState("");

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setSuccess("");
    setError("");

    
      const response = await fetch(
        "https://68ca7e64430c4476c349b244.mockapi.io/Employee_Leave_Form",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ ...formData, status: "Pending" }),
        }
      );

      if (!response.ok) throw new Error("Failed to submit leave application");

      setSuccess("Leave application submitted âœ…");
      setFormData({
        employeeName: "",
        leaveType: "",
        fromDate: "",
        toDate: "",
        reason: "",
      });
 
    
  };

  return (
    <div className="flex justify-center">
    <div className="bg-white shadow-md rounded-2xl p-6 mb-6 w-100">
      <h2 className="text-xl font-bold mb-4 text-blue-600">
        Apply for Leave
      </h2>

      {success && <p className="text-green-600 mb-2">{success}</p>}
      {error && <p className="text-red-600 mb-2">{error}</p>}

      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          type="text"
          name="employeeName"
          value={formData.employeeName}
          onChange={handleChange}
          placeholder="Employee Name"
          required
          className="w-full border p-2 rounded-lg"
        />

        <select
          name="leaveType"
          value={formData.leaveType}
          onChange={handleChange}
          required
          className="w-full border p-2 rounded-lg"
        >
          <option value="">Select Leave Type</option>
          <option value="Sick Leave">Sick Leave</option>
          <option value="Casual Leave">Casual Leave</option>
          <option value="Annual Leave">Annual Leave</option>
          <option value="Maternity Leave">Maternity Leave</option>
        </select>

        <div className="flex gap-4">
          <input
            type="date"
            name="fromDate"
            value={formData.fromDate}
            onChange={handleChange}
            required
            className="w-1/2 border p-2 rounded-lg"
          />
          <input
            type="date"
            name="toDate"
            value={formData.toDate}
            onChange={handleChange}
            required
            className="w-1/2 border p-2 rounded-lg"
          />
        </div>

        <textarea
          name="reason"
          value={formData.reason}
          onChange={handleChange}
          required
          className="w-full border p-2 rounded-lg"
          rows="3"
          placeholder="Reason for leave"
        ></textarea>

        <button
          type="submit"
          className="w-full bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-lg font-semibold"
        >
          Submit
        </button>
      </form>
    </div>
    </div>
  );
}

export default LeaveForm;
